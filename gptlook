// taskpane.js

Office.onReady((info) => {
  if (info.host === Office.HostType.Word) {
    document.getElementById("generateText").onclick = run;
  }
});

async function run() {
  return Word.run(async (context) => {
    const selectedText = context.document.getSelection();
    selectedText.load("text");

    await context.sync();

    const prompt = `Generate a paragraph based on this context: ${selectedText.text}`;

    try {
      const generatedText = await getGPTResponse(prompt);

      selectedText.insertText(generatedText, Word.InsertLocation.replace);
      await context.sync();
    } catch (error) {
      console.error("Error generating text:", error);
    }
  });
}

async function getGPTResponse(prompt) {
  const apiKey = "<YOUR_OPENAI_API_KEY>"; // Replace with your OpenAI API Key

  const response = await fetch("https://api.openai.com/v1/engines/gpt-4/completions", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      "Authorization": `Bearer ${apiKey}`
    },
    body: JSON.stringify({
      prompt: prompt,
      max_tokens: 150
    })
  });

  if (!response.ok) {
    throw new Error("Failed to fetch response from OpenAI API");
  }

  const data = await response.json();
  return data.choices[0].text.trim();
}
